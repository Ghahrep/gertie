"""Add workflow persistence tables - fixed

Revision ID: 5fa87cb283cb
Revises: a35b9affdfe8
Create Date: 2025-08-25 15:27:03.308575

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5fa87cb283cb'
down_revision: Union[str, Sequence[str], None] = 'a35b9affdfe8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_health_metrics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('recorded_at', sa.DateTime(), nullable=False),
    sa.Column('active_workflows', sa.Integer(), nullable=False),
    sa.Column('completed_workflows_last_hour', sa.Integer(), nullable=False),
    sa.Column('failed_workflows_last_hour', sa.Integer(), nullable=False),
    sa.Column('average_workflow_duration_seconds', sa.Float(), nullable=True),
    sa.Column('mcp_server_available', sa.Boolean(), nullable=False),
    sa.Column('mcp_active_jobs', sa.Integer(), nullable=True),
    sa.Column('mcp_average_response_time_ms', sa.Float(), nullable=True),
    sa.Column('mcp_error_rate_percent', sa.Float(), nullable=True),
    sa.Column('fastest_agent', sa.String(length=100), nullable=True),
    sa.Column('slowest_agent', sa.String(length=100), nullable=True),
    sa.Column('most_reliable_agent', sa.String(length=100), nullable=True),
    sa.Column('cpu_usage_percent', sa.Float(), nullable=True),
    sa.Column('memory_usage_percent', sa.Float(), nullable=True),
    sa.Column('disk_usage_percent', sa.Float(), nullable=True),
    sa.Column('avg_query_time_ms', sa.Float(), nullable=True),
    sa.Column('database_connections_active', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_system_health_recorded_at', 'system_health_metrics', ['recorded_at'], unique=False)
    op.create_table('csv_import_jobs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('filename', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('total_rows', sa.Integer(), nullable=True),
    sa.Column('processed_rows', sa.Integer(), nullable=True),
    sa.Column('success_count', sa.Integer(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('errors', sa.JSON(), nullable=True),
    sa.Column('warnings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_csv_import_jobs_id'), 'csv_import_jobs', ['id'], unique=False)
    op.create_table('workflow_sessions',
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('workflow_type', sa.String(length=20), nullable=False),
    sa.Column('complexity_score', sa.Float(), nullable=True),
    sa.Column('mcp_job_id', sa.String(length=36), nullable=True),
    sa.Column('execution_mode', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('current_step', sa.Integer(), nullable=True),
    sa.Column('total_steps', sa.Integer(), nullable=True),
    sa.Column('steps_completed', sa.JSON(), nullable=True),
    sa.Column('strategy_result', sa.JSON(), nullable=True),
    sa.Column('screening_result', sa.JSON(), nullable=True),
    sa.Column('analysis_result', sa.JSON(), nullable=True),
    sa.Column('final_synthesis', sa.JSON(), nullable=True),
    sa.Column('errors', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_index('idx_workflow_sessions_created_at', 'workflow_sessions', ['created_at'], unique=False)
    op.create_index('idx_workflow_sessions_execution_mode', 'workflow_sessions', ['execution_mode'], unique=False)
    op.create_index('idx_workflow_sessions_state', 'workflow_sessions', ['state'], unique=False)
    op.create_index('idx_workflow_sessions_user_id', 'workflow_sessions', ['user_id'], unique=False)
    op.create_index('idx_workflow_sessions_workflow_type', 'workflow_sessions', ['workflow_type'], unique=False)
    op.create_table('agent_performance_metrics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('agent_id', sa.String(length=100), nullable=False),
    sa.Column('capability', sa.String(length=100), nullable=False),
    sa.Column('execution_time_ms', sa.Integer(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('query_complexity', sa.Float(), nullable=True),
    sa.Column('execution_mode', sa.String(length=20), nullable=False),
    sa.Column('workflow_type', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.String(length=36), nullable=True),
    sa.Column('memory_usage_mb', sa.Float(), nullable=True),
    sa.Column('cpu_usage_percent', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['workflow_sessions.session_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_agent_performance_agent_id', 'agent_performance_metrics', ['agent_id'], unique=False)
    op.create_index('idx_agent_performance_capability', 'agent_performance_metrics', ['capability'], unique=False)
    op.create_index('idx_agent_performance_composite', 'agent_performance_metrics', ['agent_id', 'capability', 'execution_mode'], unique=False)
    op.create_index('idx_agent_performance_created_at', 'agent_performance_metrics', ['created_at'], unique=False)
    op.create_index('idx_agent_performance_execution_mode', 'agent_performance_metrics', ['execution_mode'], unique=False)
    op.create_table('mcp_job_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=True),
    sa.Column('job_request', sa.JSON(), nullable=False),
    sa.Column('job_response', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('total_execution_time_ms', sa.Integer(), nullable=True),
    sa.Column('queue_wait_time_ms', sa.Integer(), nullable=True),
    sa.Column('network_latency_ms', sa.Integer(), nullable=True),
    sa.Column('agents_involved', sa.JSON(), nullable=True),
    sa.Column('workflow_steps_count', sa.Integer(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('retry_reason', sa.String(length=255), nullable=True),
    sa.Column('mcp_server_load', sa.Float(), nullable=True),
    sa.Column('priority_level', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['workflow_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mcp_job_logs_job_id', 'mcp_job_logs', ['job_id'], unique=False)
    op.create_index('idx_mcp_job_logs_session_id', 'mcp_job_logs', ['session_id'], unique=False)
    op.create_index('idx_mcp_job_logs_status', 'mcp_job_logs', ['status'], unique=False)
    op.create_index('idx_mcp_job_logs_submitted_at', 'mcp_job_logs', ['submitted_at'], unique=False)
    op.create_index(op.f('ix_mcp_job_logs_job_id'), 'mcp_job_logs', ['job_id'], unique=False)
    op.create_table('risk_alert_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('alert_id', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('snapshot_id', sa.String(length=36), nullable=True),
    sa.Column('alert_type', sa.String(length=30), nullable=False),
    sa.Column('alert_severity', sa.String(length=10), nullable=True),
    sa.Column('alert_message', sa.Text(), nullable=False),
    sa.Column('triggered_metrics', sa.JSON(), nullable=True),
    sa.Column('risk_change_summary', sa.JSON(), nullable=True),
    sa.Column('workflow_id', sa.String(length=36), nullable=True),
    sa.Column('workflow_status', sa.String(length=20), nullable=True),
    sa.Column('notification_methods', sa.JSON(), nullable=True),
    sa.Column('notification_status', sa.JSON(), nullable=True),
    sa.Column('user_acknowledged', sa.Boolean(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('alert_id')
    )
    op.create_index('idx_alert_user_portfolio', 'risk_alert_logs', ['user_id', 'portfolio_id'], unique=False)
    op.create_index('idx_alert_workflow', 'risk_alert_logs', ['workflow_id'], unique=False)
    op.create_index(op.f('ix_risk_alert_logs_created_at'), 'risk_alert_logs', ['created_at'], unique=False)
    op.create_table('risk_threshold_configs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=True),
    sa.Column('volatility_threshold', sa.Float(), nullable=True),
    sa.Column('beta_threshold', sa.Float(), nullable=True),
    sa.Column('max_drawdown_threshold', sa.Float(), nullable=True),
    sa.Column('var_threshold', sa.Float(), nullable=True),
    sa.Column('risk_score_threshold', sa.Float(), nullable=True),
    sa.Column('max_acceptable_risk_score', sa.Float(), nullable=True),
    sa.Column('max_acceptable_volatility', sa.Float(), nullable=True),
    sa.Column('monitoring_enabled', sa.Boolean(), nullable=True),
    sa.Column('alert_frequency', sa.String(length=20), nullable=True),
    sa.Column('notification_methods', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_portfolio_config', 'risk_threshold_configs', ['user_id', 'portfolio_id'], unique=True)
    op.create_table('workflow_steps',
    sa.Column('step_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('step_number', sa.Integer(), nullable=False),
    sa.Column('step_name', sa.String(length=50), nullable=False),
    sa.Column('agent_id', sa.String(length=100), nullable=False),
    sa.Column('capability', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('dependencies', sa.JSON(), nullable=True),
    sa.Column('mcp_job_step_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['workflow_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('step_id')
    )
    op.create_index('idx_workflow_steps_agent_id', 'workflow_steps', ['agent_id'], unique=False)
    op.create_index('idx_workflow_steps_session_id', 'workflow_steps', ['session_id'], unique=False)
    op.create_index('idx_workflow_steps_status', 'workflow_steps', ['status'], unique=False)
    op.create_index('idx_workflow_steps_step_number', 'workflow_steps', ['step_number'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_workflow_steps_step_number', table_name='workflow_steps')
    op.drop_index('idx_workflow_steps_status', table_name='workflow_steps')
    op.drop_index('idx_workflow_steps_session_id', table_name='workflow_steps')
    op.drop_index('idx_workflow_steps_agent_id', table_name='workflow_steps')
    op.drop_table('workflow_steps')
    op.drop_index('idx_user_portfolio_config', table_name='risk_threshold_configs')
    op.drop_table('risk_threshold_configs')
    op.drop_index(op.f('ix_risk_alert_logs_created_at'), table_name='risk_alert_logs')
    op.drop_index('idx_alert_workflow', table_name='risk_alert_logs')
    op.drop_index('idx_alert_user_portfolio', table_name='risk_alert_logs')
    op.drop_table('risk_alert_logs')
    op.drop_index(op.f('ix_mcp_job_logs_job_id'), table_name='mcp_job_logs')
    op.drop_index('idx_mcp_job_logs_submitted_at', table_name='mcp_job_logs')
    op.drop_index('idx_mcp_job_logs_status', table_name='mcp_job_logs')
    op.drop_index('idx_mcp_job_logs_session_id', table_name='mcp_job_logs')
    op.drop_index('idx_mcp_job_logs_job_id', table_name='mcp_job_logs')
    op.drop_table('mcp_job_logs')
    op.drop_index('idx_agent_performance_execution_mode', table_name='agent_performance_metrics')
    op.drop_index('idx_agent_performance_created_at', table_name='agent_performance_metrics')
    op.drop_index('idx_agent_performance_composite', table_name='agent_performance_metrics')
    op.drop_index('idx_agent_performance_capability', table_name='agent_performance_metrics')
    op.drop_index('idx_agent_performance_agent_id', table_name='agent_performance_metrics')
    op.drop_table('agent_performance_metrics')
    op.drop_index('idx_workflow_sessions_workflow_type', table_name='workflow_sessions')
    op.drop_index('idx_workflow_sessions_user_id', table_name='workflow_sessions')
    op.drop_index('idx_workflow_sessions_state', table_name='workflow_sessions')
    op.drop_index('idx_workflow_sessions_execution_mode', table_name='workflow_sessions')
    op.drop_index('idx_workflow_sessions_created_at', table_name='workflow_sessions')
    op.drop_table('workflow_sessions')
    op.drop_index(op.f('ix_csv_import_jobs_id'), table_name='csv_import_jobs')
    op.drop_table('csv_import_jobs')
    op.drop_index('idx_system_health_recorded_at', table_name='system_health_metrics')
    op.drop_table('system_health_metrics')
    # ### end Alembic commands ###
