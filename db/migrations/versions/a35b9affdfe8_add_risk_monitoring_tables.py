"""Add risk monitoring tables

Revision ID: a35b9affdfe8
Revises: 2d490230213f
Create Date: 2025-08-19 15:26:14.573018

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a35b9affdfe8'
down_revision: Union[str, Sequence[str], None] = '2d490230213f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('portfolio_risk_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('volatility', sa.Float(), nullable=False),
    sa.Column('beta', sa.Float(), nullable=False),
    sa.Column('max_drawdown', sa.Float(), nullable=False),
    sa.Column('var_95', sa.Float(), nullable=False),
    sa.Column('var_99', sa.Float(), nullable=False),
    sa.Column('cvar_95', sa.Float(), nullable=False),
    sa.Column('cvar_99', sa.Float(), nullable=False),
    sa.Column('sharpe_ratio', sa.Float(), nullable=False),
    sa.Column('sortino_ratio', sa.Float(), nullable=False),
    sa.Column('calmar_ratio', sa.Float(), nullable=False),
    sa.Column('hurst_exponent', sa.Float(), nullable=True),
    sa.Column('dfa_alpha', sa.Float(), nullable=True),
    sa.Column('risk_score', sa.Float(), nullable=False),
    sa.Column('sentiment_index', sa.Integer(), nullable=False),
    sa.Column('regime_volatility', sa.Float(), nullable=True),
    sa.Column('snapshot_date', sa.DateTime(), nullable=False),
    sa.Column('calculation_method', sa.String(), nullable=False),
    sa.Column('data_window_days', sa.Integer(), nullable=False),
    sa.Column('risk_factors', sa.JSON(), nullable=True),
    sa.Column('market_conditions', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_portfolio_risk_snapshots_id'), 'portfolio_risk_snapshots', ['id'], unique=False)
    op.create_table('risk_change_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('current_snapshot_id', sa.Integer(), nullable=False),
    sa.Column('previous_snapshot_id', sa.Integer(), nullable=True),
    sa.Column('risk_direction', sa.String(), nullable=False),
    sa.Column('risk_magnitude_pct', sa.Float(), nullable=False),
    sa.Column('threshold_breached', sa.Boolean(), nullable=False),
    sa.Column('risk_changes', sa.JSON(), nullable=False),
    sa.Column('significant_changes', sa.JSON(), nullable=False),
    sa.Column('workflow_triggered', sa.Boolean(), nullable=False),
    sa.Column('workflow_session_id', sa.String(), nullable=True),
    sa.Column('alerts_generated', sa.JSON(), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=False),
    sa.Column('threshold_pct', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['current_snapshot_id'], ['portfolio_risk_snapshots.id'], ),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.ForeignKeyConstraint(['previous_snapshot_id'], ['portfolio_risk_snapshots.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_risk_change_events_id'), 'risk_change_events', ['id'], unique=False)
    op.create_table('proactive_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('alert_type', sa.String(), nullable=False),
    sa.Column('priority', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('risk_change_event_id', sa.Integer(), nullable=True),
    sa.Column('triggered_risk_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_sent', sa.Boolean(), nullable=False),
    sa.Column('is_acknowledged', sa.Boolean(), nullable=False),
    sa.Column('is_resolved', sa.Boolean(), nullable=False),
    sa.Column('delivery_channels', sa.JSON(), nullable=True),
    sa.Column('delivery_status', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.ForeignKeyConstraint(['risk_change_event_id'], ['risk_change_events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_proactive_alerts_id'), 'proactive_alerts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_proactive_alerts_id'), table_name='proactive_alerts')
    op.drop_table('proactive_alerts')
    op.drop_index(op.f('ix_risk_change_events_id'), table_name='risk_change_events')
    op.drop_table('risk_change_events')
    op.drop_index(op.f('ix_portfolio_risk_snapshots_id'), table_name='portfolio_risk_snapshots')
    op.drop_table('portfolio_risk_snapshots')
    # ### end Alembic commands ###
