"""Add A/B testing models and fix data model issues

Revision ID: 8f495965ad16
Revises: e2983d92d71d
Create Date: 2025-08-27 16:54:45.343688

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8f495965ad16'
down_revision: Union[str, Sequence[str], None] = 'e2983d92d71d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ab_tests',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ab_tests_id'), 'ab_tests', ['id'], unique=False)
    op.create_index(op.f('ix_ab_tests_status'), 'ab_tests', ['status'], unique=False)
    op.create_table('ab_test_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('variant_id', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['ab_tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ab_test_user_assignment', 'ab_test_assignments', ['test_id', 'user_id'], unique=True)
    op.create_index(op.f('ix_ab_test_assignments_user_id'), 'ab_test_assignments', ['user_id'], unique=False)
    op.create_table('ab_test_variants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.String(), nullable=False),
    sa.Column('variant_id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['ab_tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ab_test_variants_test_id'), 'ab_test_variants', ['test_id'], unique=False)
    op.create_index(op.f('ix_portfolio_risk_snapshots_is_threshold_breach'), 'portfolio_risk_snapshots', ['is_threshold_breach'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_portfolio_risk_snapshots_is_threshold_breach'), table_name='portfolio_risk_snapshots')
    op.drop_index(op.f('ix_ab_test_variants_test_id'), table_name='ab_test_variants')
    op.drop_table('ab_test_variants')
    op.drop_index(op.f('ix_ab_test_assignments_user_id'), table_name='ab_test_assignments')
    op.drop_index('idx_ab_test_user_assignment', table_name='ab_test_assignments')
    op.drop_table('ab_test_assignments')
    op.drop_index(op.f('ix_ab_tests_status'), table_name='ab_tests')
    op.drop_index(op.f('ix_ab_tests_id'), table_name='ab_tests')
    op.drop_table('ab_tests')
    # ### end Alembic commands ###
